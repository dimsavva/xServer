name: Build

on: 
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  
  buildTestRelease:

    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            extension: ".deb"
            bc_extension: ".tar.gz"
            runtime: "linux-amd64"
            platform: "linux"
            dotnet_runtime: "linux-x64"
            xs_package_runtime: "linux-x64"
        node_version: [16.x]
        dotnet_version: ['6.0.400']
      fail-fast: false

    runs-on: ${{ matrix.os }}
    
    env:
      XSERVER_PROJECT_NAME: 'xServer'
      XSERVER_SOLUTION_PATH: 'xServer.D.sln'
      XSERVER_PROJECT_PATH: 'xServer.D/xServerD.csproj'
      XSERVER_BUILD_CONFIGURATION: 'Release'
      UI_PATH: './xServer.UI/'
      XSERVER_PATH: './xServer.D/'
      ARCH: 'x64'

    steps:

    - uses: actions/checkout@v1
      name: Checkout

    - name: Setup Node.js (${{ matrix.node_version }})
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}
    
    - name: Package NPM Variables
      run: |
        cd ${{ env.UI_PATH }}
        echo XSERVER_NAME=$(npm run name --silent) >> $GITHUB_ENV
        echo XSERVER_VERSION=$(npm run version --silent) >> $GITHUB_ENV
        echo BLOCKCORE_DAEMON_VERSION=$(npm run blockcore_version --silent) >> $GITHUB_ENV
      shell: bash
        
    - name: Release Variables
      run: |
        echo RELEASE_NAME=${{ env.XSERVER_NAME }}-v${{ env.XSERVER_VERSION }}-${{ matrix.runtime }}${{ matrix.extension }} >> $GITHUB_ENV
      shell: bash

    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
     
    - name: Build and push x42ServerUI
      uses: docker/build-push-action@v3
      with:
        context:  ${{ env.UI_PATH }}/.
        push: true
        tags: x42protocoldocker/x42serverui:v${{ env.XSERVER_VERSION }}
        
    - name: Build and push x42Server Daemon
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ${{ env.XSERVER_PATH }}/Dockerfile
        push: true
        tags: x42protocoldocker/x42serverd:v${{ env.BLOCKCORE_DAEMON_VERSION }}

